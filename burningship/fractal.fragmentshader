#version 330 core

#define MaxIter 250
//#define zoom 10000000
//#define center_x 0.377
//#define center_y 0.25
#define scale 1080.0
uniform int width;
uniform int height;
uniform float cx;
uniform float cy;
uniform float zoom;
int get_iterations(float X,float Y)
{
    //float real = ((gl_FragCoord.x / scale - 0.5) * zoom + center_x) * 5.0;
    //float imag = ((gl_FragCoord.y / scale - 0.5) * zoom + center_y) * 5.0;
    highp float  real = ((X  - 0.5*width) / zoom +cx) ;
    highp float imag = ((Y - 0.5*height) / zoom +cy) ;
 
   // real= abs(real);
    //imag= abs(imag);

    int iterations = 0;
    highp float const_real = real;
    highp float const_imag = imag;
   // highp float const_real = -0.54f;
   // highp float const_imag = 0.5f;
 
    while (iterations < MaxIter)
    {
        highp float tmp_real = real;
        //MandelBrot
        real = (real * real - imag * imag) + const_real;
        imag = (2.0 * tmp_real * imag) + const_imag;
         //z^3 +c
        // real = (real * real* real - 3.0*real*imag * imag) + const_real;
        //imag = (3.0 * tmp_real * tmp_real * imag - imag*imag*imag) + const_imag;
         
        highp float dist = real * real + imag * imag;
          real= abs(real);
          imag= abs(imag);

        if (dist > 4.0)
        break;
 
        ++iterations;
    }
    return iterations;
}
 
vec4 return_color()
{
    int iter = (get_iterations(gl_FragCoord.x,gl_FragCoord.y)+get_iterations(gl_FragCoord.x+1,gl_FragCoord.y))/2;
    if (iter == MaxIter)
    {
        //gl_FragDepth = 0.0f;
        return vec4(0.0f, 0.0f, 0.0f, 1.0f);
    }
 
    float iterations = float(iter) / MaxIter;
    //float r=exp(-pow(iterations-1.0f,2)/0.2f);
    float r=0;
    float g=exp(-pow(iterations-0.64f,2)/0.045f);
    float b=exp(-pow(iterations-0.18f,2)/0.017f);
    float w=exp(-pow(iterations-0.42f,2)/0.01f);
//    r=(1.2*g+w)/1.3;
//    g=g/1.5+w/1.3;
//    b=(b+w)/1.3;
   
   //b=0.7*g+b;
    //g=0.2*r+g;
    return vec4(1.3*(g+b),(g+b)/1.1,0, 1.0f);
}

out vec4 gl_FragColor;

void main()
{
	gl_FragColor=return_color();
    //if(gl_FragCoord.x==gl_FragCoord.y)
    //gl_FragColor=vec4(1,0,0,1);
}
